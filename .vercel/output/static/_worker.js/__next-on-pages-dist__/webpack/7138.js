var d={},q=(p,b,y)=>(d.__chunk_7138=(x,l,o)=>{"use strict";o.d(l,{Rf:()=>i,cX:()=>u,gx:()=>w,ln:()=>g,xX:()=>m});var c=o(9985),f=o(6095);class t extends Error{constructor(n,r=500,s=null){super(n),this.statusCode=r,this.code=s,this.name="ApiError"}}let i={success:(e,n=null,r=200)=>{let s={success:!0,...e};return n&&(s.message=n),c.xk.json(s,{status:r})},error:(e,n=500)=>{let r={success:!1,error:e.message||e,timestamp:new Date().toISOString()};return e.code&&(r.code=e.code),e.details&&(r.details=e.details),e.hint&&(r.hint=e.hint),c.xk.json(r,{status:n})},unauthorized:(e="Unauthorized access")=>i.error(new t(e,401),401),forbidden:(e="Access denied - insufficient permissions")=>i.error(new t(e,403),403),notFound:(e="Resource")=>i.error(new t(`${e} not found`,404),404),badRequest:(e="Invalid request data")=>i.error(new t(e,400),400),conflict:(e="Resource conflict")=>i.error(new t(e,409),409)},u={required:(e,n)=>{let r=e.filter(s=>!n[s]);if(r.length>0)throw new t(`Missing required fields: ${r.join(", ")}`,400)},email:e=>{if(!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e))throw new t("Invalid email format",400)},uuid:(e,n="ID")=>{if(!/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(e))throw new t(`Invalid ${n} format`,400)},slug:e=>{if(!/^[a-z0-9]+(?:-[a-z0-9]+)*$/.test(e))throw new t("Slug must contain only lowercase letters, numbers, and hyphens",400)},enum:(e,n,r="field")=>{if(!n.includes(e))throw new t(`${r} must be one of: ${n.join(", ")}`,400)},sanitizeHtml:e=>e&&e.replace(/<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,"").replace(/<iframe\b[^<]*(?:(?!<\/iframe>)<[^<]*)*<\/iframe>/gi,"").replace(/javascript:/gi,"").replace(/on\w+\s*=/gi,"")},w={async requireAuth(){let e=await(0,f.I8)();if(!e||!e.user?.email)throw new t("Authentication required",401);return e},async requireUser(e,n){let r=await e.getUserByEmail(n);if(!r)throw new t("User not found",404);return r},async requireOrganizationMember(e,n,r,s=["owner","admin","member"]){let a=await e.getOrganizationMember(n,r);if(!a||!s.includes(a.role))throw new t(`Access denied - requires role: ${s.join(" or ")}`,403);return a}},h={handle:e=>{throw console.error("Database error:",e),e.code==="23505"||e.message?.includes("duplicate key")?new t("Resource already exists",409):e.code==="23503"||e.message?.includes("foreign key")?new t("Referenced resource not found",400):e.code==="23514"||e.message?.includes("check constraint")?new t("Invalid data format",400):e.message?.includes("does not exist")?new t("Resource not found",404):e.message?.includes("Row Level Security")?new t("Access denied",403):new t("Database operation failed",500)}},m=e=>async(...n)=>{try{return await e(...n)}catch(r){if(r instanceof t)return i.error(r,r.statusCode);if(r.code||r.message?.includes("database"))try{h.handle(r)}catch(s){return i.error(s,s.statusCode)}return console.error("Unexpected API error:",r),i.error(new t("An unexpected error occurred",500),500)}},g=async(e,n=[])=>{try{let r=await e.json();return n.length>0&&u.required(n,r),r}catch(r){throw r instanceof t?r:new t("Invalid JSON in request body",400)}}},d);export{q as __getNamedExports};
