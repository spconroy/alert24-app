// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["alert24_schema"]
}

// Organizations table
model Organizations {
  id          String   @id @default(cuid())
  name        String
  slug        String   @unique
  domain      String?  @unique
  logo_url    String?
  primary_color String?
  secondary_color String?
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt

  // Relations
  members     OrganizationMembers[]
  notifications Notifications[]
  realtime_channels RealtimeChannels[]
  activities  ActivityHistory[]
  billing_history BillingHistory[]
  projects    Projects[]

  @@schema("alert24_schema")
  @@map("organizations")
}

// Users table
model Users {
  id            String   @id @default(cuid())
  email         String   @unique
  name          String?
  avatar_url    String?
  google_id     String?  @unique
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt

  // Relations
  memberships   OrganizationMembers[]
  sessions      UserSessions[]
  activities    ActivityHistory[]

  @@schema("alert24_schema")
  @@map("users")
}

// Organization Members table
model OrganizationMembers {
  id             String   @id @default(cuid())
  organization_id String
  user_id        String
  role           String   @default("member") // owner, admin, member
  status         String   @default("active") // active, inactive, pending
  joined_at      DateTime @default(now())
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  // Relations
  organization   Organizations @relation(fields: [organization_id], references: [id], onDelete: Cascade)
  user          Users @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@unique([organization_id, user_id])
  @@schema("alert24_schema")
  @@map("organization_members")
}

// Notifications table
model Notifications {
  id             String   @id @default(cuid())
  organization_id String
  user_id        String?
  title          String
  message        String
  type           String   // info, warning, error, success
  read           Boolean  @default(false)
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  // Relations
  organization   Organizations @relation(fields: [organization_id], references: [id], onDelete: Cascade)

  @@schema("alert24_schema")
  @@map("notifications")
}

// Realtime Channels table
model RealtimeChannels {
  id             String   @id @default(cuid())
  organization_id String
  channel_name   String
  channel_type   String   // notifications, activity, collaboration
  active         Boolean  @default(true)
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  // Relations
  organization   Organizations @relation(fields: [organization_id], references: [id], onDelete: Cascade)

  @@unique([organization_id, channel_name])
  @@schema("alert24_schema")
  @@map("realtime_channels")
}

// Activity History table
model ActivityHistory {
  id             String   @id @default(cuid())
  organization_id String
  user_id        String?
  action         String
  entity_type    String
  entity_id      String?
  details        Json?
  ip_address     String?
  user_agent     String?
  created_at     DateTime @default(now())

  // Relations
  organization   Organizations @relation(fields: [organization_id], references: [id], onDelete: Cascade)
  user          Users? @relation(fields: [user_id], references: [id], onDelete: SetNull)

  @@schema("alert24_schema")
  @@map("activity_history")
}

// Subscription Plans table
model SubscriptionPlans {
  id             String   @id @default(cuid())
  name           String
  slug           String   @unique
  description    String?
  price_monthly  Decimal
  price_yearly   Decimal
  features       Json
  max_members    Int
  max_projects   Int
  active         Boolean  @default(true)
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  // Relations
  billing_history BillingHistory[]

  @@schema("alert24_schema")
  @@map("subscription_plans")
}

// Billing History table
model BillingHistory {
  id             String   @id @default(cuid())
  organization_id String
  plan_id        String?
  stripe_customer_id String?
  stripe_subscription_id String?
  stripe_invoice_id String?
  amount         Decimal
  currency       String   @default("usd")
  status         String   // pending, paid, failed, cancelled
  billing_period_start DateTime?
  billing_period_end   DateTime?
  paid_at        DateTime?
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  // Relations
  organization   Organizations @relation(fields: [organization_id], references: [id], onDelete: Cascade)
  plan          SubscriptionPlans? @relation(fields: [plan_id], references: [id])

  @@schema("alert24_schema")
  @@map("billing_history")
}

// Projects table
model Projects {
  id             String   @id @default(cuid())
  organization_id String
  name           String
  description    String?
  status         String   @default("active") // active, archived, deleted
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  // Relations
  organization   Organizations @relation(fields: [organization_id], references: [id], onDelete: Cascade)
  members        ProjectMembers[]

  @@schema("alert24_schema")
  @@map("projects")
}

// Project Members table
model ProjectMembers {
  id             String   @id @default(cuid())
  project_id     String
  user_id        String
  role           String   @default("member") // owner, admin, member
  joined_at      DateTime @default(now())
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  // Relations
  project        Projects @relation(fields: [project_id], references: [id], onDelete: Cascade)

  @@unique([project_id, user_id])
  @@schema("alert24_schema")
  @@map("project_members")
}

// User Sessions table
model UserSessions {
  id             String   @id @default(cuid())
  user_id        String
  session_token  String   @unique
  expires_at     DateTime
  ip_address     String?
  user_agent     String?
  created_at     DateTime @default(now())
  updated_at     DateTime @updatedAt

  // Relations
  user          Users @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@schema("alert24_schema")
  @@map("user_sessions")
}
